version: "3.9"

services:
  taskevalpro-db:
    image: postgres:15-alpine
    container_name: taskevalpro-db
    ports:
      - '5432:5432'  # Map container port 5432 to host port 5432 for access
    environment:
      POSTGRES_DB: taskevalpro  # Database name
      POSTGRES_USER: postgres  # Username
      POSTGRES_PASSWORD: password  # Password (consider using environment variables for security)
      POSTGRES_HOST_AUTH_METHOD: trust  # Authentication method (consider using a stronger method in production)
    logging:
      options:
        max-size: 10m  # Maximum log file size
        max-file: "3"  # Maximum number of log files
    volumes:
      - ./postgres-data:/var/lib/postgresql/data  # Persist database data
      - ./scripts/ddl.taskevalpro.sql:/docker-entrypoint-initdb.d/01_ddl.sql
      - ./scripts/dml.taskevalpro.sql:/docker-entrypoint-initdb.d/02_dml.sql
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -q -d taskevalpro -U postgres" ]  # Health check for Postgres
      interval: 10s  # Check interval
      timeout: 10s  # Check timeout
      retries: 5  # Number of retries before considering unhealthy
    networks:
      - taskevalpro_net  # Define a rede personalizada para taskevalpro-db

  taskevalpro-api:
    build: ./api  # Build the Flask API from the ./api directory
    container_name: taskevalpro-api
    ports:
      - '5100:5100'  # Map container port 5000 to host port 5000 for Flask API access
    volumes:
      - ./api:/app  # Mount the API directory as a volume
    depends_on:
      - taskevalpro-db  # Depend on taskevalpro-db service to ensure the database is ready before starting the API
    networks:
      - taskevalpro_net  # Define a rede personalizada para taskevalpro-api
  
  taskevalpro-web:
    build: ./web  # Build the React app from the ./web directory
    container_name: taskevalpro-web
    ports:
      - '3000:3000'  # Map container port 3000 to host port 3000 for React app access
    volumes:
      - ./web:/app  # Mount the web directory as a volume
    depends_on:
      - taskevalpro-api  # Depend on taskevalpro-api service to ensure the API is ready before starting the web app
    networks:
      - taskevalpro_net  # Define a rede personalizada para taskevalpro-web

networks:
  taskevalpro_net:  # Define a rede personalizada
    name: taskevalpro_net  # Define o nome da rede
